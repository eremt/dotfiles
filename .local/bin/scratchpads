#!/bin/bash
#
# Simple scratchpads with xdotool and alacritty
#
# TODO:
# - movemouse on window start
#
CONFIG_FILE=~/.config/alacritty/scratchpad.yml

# $1: command
# $2: extra options for alacritty
term_cmd () {
  local cmd_exec=$1
  local title="sp-${cmd_exec:-scratchpad}"
  shift

  # set title and optional extra arguments
  local term_args=(-t "$title" "$@")
  if [ -n "$cmd_exec" ]; then
    # -e has to come last, see ALACRITTY(1)
    term_args+=(-e "$cmd_exec")
  fi

  if ! get_window "$title"; then
    alacritty \
      --config-file="$CONFIG_FILE" \
      --working-directory"=$HOME" \
      "${term_args[@]}"
  fi

  toggle_window "$title"
}

# store current window to toggle visibility
# if it's the same as search
current_window_id=$(xdotool getwindowfocus)

get_window () {
  local title=$1
  xdotool search --name "$title"
}

toggle_window () {
  local title=$1
  window_id=$(get_window "$title")
  if [ -z "$window_id" ]; then
    echo "Couldn't get window id, abort"
    exit 1
  fi
  # Grep output: Geometry 500x300 | 500x300
  window_size=$(xdotool getwindowgeometry "$window_id" | grep 'Geometry' | grep -Eo '[0-9]+x[0-9]+')
  # cut on 'x' and divide by 2 to get window center
  mouse_x=$(($(echo "$window_size" | cut -d 'x' -f1) / 2))
  mouse_y=$(($(echo "$window_size" | cut -d 'x' -f2) / 2))

  # toggle visibility
  if [ "$window_id" == "$current_window_id" ]; then
    # hide window
    xdotool windowunmap "$window_id"
  else
    # show window and center mouse
    xdotool windowmap --sync "$window_id" \
            windowactivate "$window_id" \
            mousemove --window "$window_id" "$mouse_x" "$mouse_y"
  fi
}

scratchpad_mail () {
  term_cmd 'neomutt' \
    -o 'window.dimensions.columns=160' \
    -o 'window.dimensions.lines=50'
}

case $1 in
  terminal) term_cmd;;
  audio)    term_cmd 'pulsemixer';;
  files)    term_cmd 'ranger';;
  mail)     scratchpad_mail;;
esac
