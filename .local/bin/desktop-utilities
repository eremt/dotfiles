#!/bin/bash
#
# Simple utility script for desktop stuff
#
# TODO:
# - [ ] Microphone volume and mute
#
set_volume () {
  # pactl expects +5%/-5%
  # grep digits from the input
  step=$(echo "$1" | grep -Eo '[0-9]')
  if [[ $1 == *"+"* ]]; then
    pactl set-sink-volume @DEFAULT_SINK@ +"$step"%
  elif [[ $1 == *"-"* ]]; then
    pactl set-sink-volume @DEFAULT_SINK@ -"$step"%
  elif [[ $1 == "toggle" ]]; then
    pactl set-sink-mute @DEFAULT_SINK@ toggle
  fi

  if [[ $(pactl get-sink-mute @DEFAULT_SINK@) =~ yes ]]; then
    current_volume=0
  else
    # grep captures 0%-100% and tail makes sure it's just 1 match
    current_volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep -Eo '[0-9]{1,3}%' | tail -n1)
  fi

  volume_bar=$(echo "$current_volume" | grep -Eo '[0-9]{1,3}')
  notify_send "Volume" "$volume_bar"
}

set_brightness () {
  # xbacklight expects -inc 5/-dec 5
  step=$(echo "$1" | grep -Eo '[0-9]')
  if [[ $1 == *"+"* ]]; then
    xbacklight -inc "$step"
  elif [[ $1 == *"-"* ]]; then
    xbacklight -dec "$step"
  fi
  current_brightness=$(xbacklight -get)
  notify_send "Brightness" "$current_brightness"
}

notify_send () {
  notify-send --urgency='low' -h int:value:"$2" "$1"
}

case $1 in
  -v|--volume) shift; set_volume "$@";;
  -b|--brightness) shift; set_brightness "$@";;
esac
